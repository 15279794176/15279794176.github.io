<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>文章</title>
    <link href="/2024/03/25/%E6%96%87%E7%AB%A0/"/>
    <url>/2024/03/25/%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/03/25/%E5%9F%BA%E4%BA%8EBP%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%BD%92%E9%A2%84%E6%B5%8B/"/>
    <url>/2024/03/25/%E5%9F%BA%E4%BA%8EBP%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%BD%92%E9%A2%84%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="基于BP神经网络的数据回归预测"><a href="#基于BP神经网络的数据回归预测" class="headerlink" title="基于BP神经网络的数据回归预测"></a>基于BP神经网络的数据回归预测</h1><h2 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">%%  清空环境变量</span><br>warning off             <span class="hljs-comment">% 关闭报警信息</span><br>close all               <span class="hljs-comment">% 关闭开启的图窗</span><br>clear                   <span class="hljs-comment">% 清空变量</span><br>clc                     <span class="hljs-comment">% 清空命令行</span><br><span class="hljs-comment">%%  导入数据</span><br>res = xlsread(<span class="hljs-string">&#x27;数据集.xlsx&#x27;</span>);<br><span class="hljs-comment">%%  划分训练集和测试集</span><br>temp = randperm(<span class="hljs-number">92</span>);<br>P_train = res(temp(<span class="hljs-number">1</span>: <span class="hljs-number">70</span>), <span class="hljs-number">1</span>: <span class="hljs-number">7</span>)&#x27;;<br>T_train = res(temp(<span class="hljs-number">1</span>: <span class="hljs-number">70</span>), <span class="hljs-number">8</span>)&#x27;;<br>M = <span class="hljs-built_in">size</span>(P_train, <span class="hljs-number">2</span>);<br>P_test = res(temp(<span class="hljs-number">71</span>: <span class="hljs-keyword">end</span>), <span class="hljs-number">1</span>: <span class="hljs-number">7</span>)&#x27;;<br>T_test = res(temp(<span class="hljs-number">71</span>: <span class="hljs-keyword">end</span>), <span class="hljs-number">8</span>)&#x27;;<br>N = <span class="hljs-built_in">size</span>(P_test, <span class="hljs-number">2</span>);<br><span class="hljs-comment">%%  数据归一化</span><br>[p_train, ps_input] = mapminmax(P_train, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>p_test = mapminmax(<span class="hljs-string">&#x27;apply&#x27;</span>, P_test, ps_input);<br>[t_train, ps_output] = mapminmax(T_train, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>t_test = mapminmax(<span class="hljs-string">&#x27;apply&#x27;</span>, T_test, ps_output);<br><span class="hljs-comment">%%  创建网络</span><br>net = newff(p_train, t_train, <span class="hljs-number">5</span>);<br><span class="hljs-comment">%%  设置训练参数</span><br>net.trainParam.epochs = <span class="hljs-number">1000</span>;     <span class="hljs-comment">% 迭代次数 </span><br>net.trainParam.goal = <span class="hljs-number">1e-6</span>;       <span class="hljs-comment">% 误差阈值</span><br>net.trainParam.lr = <span class="hljs-number">0.01</span>;         <span class="hljs-comment">% 学习率</span><br><span class="hljs-comment">%%  训练网络</span><br>net= train(net, p_train, t_train);<br><span class="hljs-comment">%%  仿真测试</span><br>t_sim1 = sim(net, p_train);<br>t_sim2 = sim(net, p_test);<br><span class="hljs-comment">%%  数据反归一化</span><br>T_sim1 = mapminmax(<span class="hljs-string">&#x27;reverse&#x27;</span>, t_sim1, ps_output);<br>T_sim2 = mapminmax(<span class="hljs-string">&#x27;reverse&#x27;</span>, t_sim2, ps_output);<br><span class="hljs-comment">%%  均方根误差</span><br>error1 = <span class="hljs-built_in">sqrt</span>(sum((T_sim1 - T_train).^<span class="hljs-number">2</span>) ./ M);<br>error2 = <span class="hljs-built_in">sqrt</span>(sum((T_sim2 - T_test ).^<span class="hljs-number">2</span>) ./ N);<br><span class="hljs-comment">%%  绘图</span><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">plot</span>(<span class="hljs-number">1</span>: M, T_train, <span class="hljs-string">&#x27;r-*&#x27;</span>, <span class="hljs-number">1</span>: M, T_sim1, <span class="hljs-string">&#x27;b-o&#x27;</span>, <span class="hljs-string">&#x27;LineWidth&#x27;</span>, <span class="hljs-number">1</span>)<br><span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;真实值&#x27;</span>, <span class="hljs-string">&#x27;预测值&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;预测样本&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;预测结果&#x27;</span>)<br>string = &#123;<span class="hljs-string">&#x27;训练集预测结果对比&#x27;</span>; [<span class="hljs-string">&#x27;RMSE=&#x27;</span> num2str(error1)]&#125;;<br>title(string)<br>xlim([<span class="hljs-number">1</span>, M])<br>grid<br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">plot</span>(<span class="hljs-number">1</span>: N, T_test, <span class="hljs-string">&#x27;r-*&#x27;</span>, <span class="hljs-number">1</span>: N, T_sim2, <span class="hljs-string">&#x27;b-o&#x27;</span>, <span class="hljs-string">&#x27;LineWidth&#x27;</span>, <span class="hljs-number">1</span>)<br><span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;真实值&#x27;</span>, <span class="hljs-string">&#x27;预测值&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;预测样本&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;预测结果&#x27;</span>)<br>string = &#123;<span class="hljs-string">&#x27;测试集预测结果对比&#x27;</span>; [<span class="hljs-string">&#x27;RMSE=&#x27;</span> num2str(error2)]&#125;;<br>title(string)<br>xlim([<span class="hljs-number">1</span>, N])<br>grid<br><span class="hljs-comment">%%  相关指标计算</span><br><span class="hljs-comment">% R2</span><br>R1 = <span class="hljs-number">1</span> - norm(T_train - T_sim1)^<span class="hljs-number">2</span> / norm(T_train - <span class="hljs-built_in">mean</span>(T_train))^<span class="hljs-number">2</span>;<br>R2 = <span class="hljs-number">1</span> - norm(T_test  - T_sim2)^<span class="hljs-number">2</span> / norm(T_test  - <span class="hljs-built_in">mean</span>(T_test ))^<span class="hljs-number">2</span>;<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的R2为：&#x27;</span>, num2str(R1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的R2为：&#x27;</span>, num2str(R2)])<br><span class="hljs-comment">% MAE</span><br>mae1 = sum(<span class="hljs-built_in">abs</span>(T_sim1 - T_train)) ./ M ;<br>mae2 = sum(<span class="hljs-built_in">abs</span>(T_sim2 - T_test )) ./ N ;<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的MAE为：&#x27;</span>, num2str(mae1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的MAE为：&#x27;</span>, num2str(mae2)])<br><span class="hljs-comment">% MBE</span><br>mbe1 = sum(T_sim1 - T_train) ./ M ;<br>mbe2 = sum(T_sim2 - T_test ) ./ N ;<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的MBE为：&#x27;</span>, num2str(mbe1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的MBE为：&#x27;</span>, num2str(mbe2)])<br><span class="hljs-comment">%%  绘制散点图</span><br>sz = <span class="hljs-number">25</span>;<br>c = <span class="hljs-string">&#x27;b&#x27;</span>;<br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">scatter</span>(T_train, T_sim1, sz, c)<br><span class="hljs-built_in">hold</span> on<br><span class="hljs-built_in">plot</span>(xlim, ylim, <span class="hljs-string">&#x27;--k&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;训练集真实值&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;训练集预测值&#x27;</span>);<br>xlim([<span class="hljs-built_in">min</span>(T_train) <span class="hljs-built_in">max</span>(T_train)])<br>ylim([<span class="hljs-built_in">min</span>(T_sim1) <span class="hljs-built_in">max</span>(T_sim1)])<br>title(<span class="hljs-string">&#x27;训练集预测值 vs. 训练集真实值&#x27;</span>)<br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">scatter</span>(T_test, T_sim2, sz, c)<br><span class="hljs-built_in">hold</span> on<br><span class="hljs-built_in">plot</span>(xlim, ylim, <span class="hljs-string">&#x27;--k&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;测试集真实值&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;测试集预测值&#x27;</span>);<br>xlim([<span class="hljs-built_in">min</span>(T_test) <span class="hljs-built_in">max</span>(T_test)])<br>ylim([<span class="hljs-built_in">min</span>(T_sim2) <span class="hljs-built_in">max</span>(T_sim2)])<br>title(<span class="hljs-string">&#x27;测试集预测值 vs. 测试集真实值&#x27;</span>)<br><span class="hljs-comment">%%  保存所需变量</span><br>save net.mat net<br>save ps_input.mat ps_input<br>save ps_output.mat ps_output<br></code></pre></td></tr></table></figure><h2 id="2-注释"><a href="#2-注释" class="headerlink" title="2.注释"></a>2.注释</h2><h3 id="1-划分训练集和测试集"><a href="#1-划分训练集和测试集" class="headerlink" title="(1)划分训练集和测试集"></a>(1)划分训练集和测试集</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs matlab">temp = randperm(<span class="hljs-number">92</span>);<br><br>P_train = res(temp(<span class="hljs-number">1</span>: <span class="hljs-number">70</span>), <span class="hljs-number">1</span>: <span class="hljs-number">7</span>)&#x27;;<br>T_train = res(temp(<span class="hljs-number">1</span>: <span class="hljs-number">70</span>), <span class="hljs-number">8</span>)&#x27;;<br>M = <span class="hljs-built_in">size</span>(P_train, <span class="hljs-number">2</span>);<br><br>P_test = res(temp(<span class="hljs-number">71</span>: <span class="hljs-keyword">end</span>), <span class="hljs-number">1</span>: <span class="hljs-number">7</span>)&#x27;;<br>T_test = res(temp(<span class="hljs-number">71</span>: <span class="hljs-keyword">end</span>), <span class="hljs-number">8</span>)&#x27;;<br>N = <span class="hljs-built_in">size</span>(P_test, <span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><p>这段代码是用来从一个数据集中划分出训练集和测试集的，这是机器学习中常见的一环，目的是为了评估模型在未见过的数据上的泛化能力。</p><ol><li><code>temp = randperm(92);</code>:<br>这行代码使用<code>randperm</code>函数生成一个包含从1到92的随机排列序列。这里假定原始数据集有92行数据，该函数会随机打乱这些行号，使得每次运行时都能得到不同的数据划分方式，增加了实验的随机性和普遍性。</li><li><code>P_train = res(temp(1: 70), 1: 7)&#39;;</code>:<br>选取随机排列后前70行（即70%的数据，常用比例）作为训练集。<code>res</code>是之前读入的数据集，这里取第1列到第7列作为特征（自变量），使用转置操作<code>&#39;</code>使样本位于行上，变量位于列上，符合MATLAB处理数据的习惯。</li><li><code>T_train = res(temp(1: 70), 8)&#39;;</code>:<br>同样从这70行中选取第8列作为训练集的目标变量（因变量）。</li><li><code>M = size(P_train, 2);</code>:<br>计算训练集特征的维度，即特征数量。这里<code>size(P_train, 2)</code>返回矩阵的列数，也就是自变量的维度。</li><li><code>P_test = res(temp(71: end), 1: 7)&#39;;</code>:<br>选取剩下的22行（即剩下的30%数据）作为测试集的特征部分。</li><li><code>T_test = res(temp(71: end), 8)&#39;;</code>:<br>同样从这剩下的22行中选取第8列作为测试集的目标变量。</li><li><code>N = size(P_test, 2);</code>:<br>计算测试集特征的维度，同样返回的是列数，确保与训练集的特征维度保持一致。<br>通过这种方式，可以评估模型在未知数据上的表现，确保模型具有良好的泛化能力。</li></ol><h3 id="2-数据归一化"><a href="#2-数据归一化" class="headerlink" title="(2)数据归一化"></a>(2)数据归一化</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs matlab">[p_train, ps_input] = mapminmax(P_train, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>p_test = mapminmax(<span class="hljs-string">&#x27;apply&#x27;</span>, P_test, ps_input);<br><br>[t_train, ps_output] = mapminmax(T_train, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>t_test = mapminmax(<span class="hljs-string">&#x27;apply&#x27;</span>, T_test, ps_output);<br></code></pre></td></tr></table></figure><p>对之前划分好的训练集和测试集数据进行归一化处理以确保所有特征在相同的尺度上.</p><ol><li><code>[p_train, ps_input] = mapminmax(P_train, 0, 1);</code>:<ul><li><code>mapminmax</code>是MATLAB中的函数，用于最小-最大缩放，即将数据按比例缩放到指定的最小值和最大值之间。在这里，它将<code>P_train</code>（训练集的特征）缩放到0到1之间。</li><li>输出有两个：<code>p_train</code>是归一化后的训练集特征，<code>ps_input</code>保存了进行此转换所需的参数（如最小值、最大值等），以便将来对新数据进行同样的转换。</li></ul></li><li><code>p_test = mapminmax(&#39;apply&#39;, P_test, ps_input);</code>:<ul><li>使用之前在训练集上计算得到的参数<code>ps_input</code>，通过<code>mapminmax</code>的<code>&#39;apply&#39;</code>选项，将相同转换应用到测试集特征<code>P_test</code>上，得到归一化后的<code>p_test</code>。这样保证了训练集和测试集在同一尺度上。</li></ul></li><li><code>[t_train, ps_output] = mapminmax(T_train, 0, 1);</code>:<ul><li>同样的处理也应用于目标变量（如果是回归任务的话）。这里，训练集的目标变量<code>T_train</code>被缩放到0到1的范围内，输出包括归一化后的<code>t_train</code>和转换参数<code>ps_output</code>。</li></ul></li><li><code>t_test = mapminmax(&#39;apply&#39;, T_test, ps_output);</code>:<ul><li>利用在训练集目标变量上计算出的转换参数<code>ps_output</code>，将相同缩放应用于测试集的目标变量<code>T_test</code>，得到归一化后的<code>t_test</code>。</li></ul></li></ol><h3 id="3-创建网络"><a href="#3-创建网络" class="headerlink" title="(3)创建网络"></a>(3)创建网络</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">net = newff(p_train, t_train, <span class="hljs-number">5</span>);<br></code></pre></td></tr></table></figure><p>这段代码是使用MATLAB的Neural Network Toolbox来创建一个前馈型神经网络模型的过程。</p><ul><li><code>newff</code>是MATLAB中用于创建多层前馈神经网络的函数。</li><li><code>p_train</code>代表训练集的输入数据，即特征向量。在神经网络训练过程中，这些输入数据会被用来学习权重和偏置，以便网络能对输入产生期望的输出。</li><li><code>t_train</code>代表训练集的目标输出数据，对于回归问题，这通常是连续值；对于分类问题，则通常是类别标签的编码形式。</li><li><code>5</code>指定了隐藏层的神经元数量。在这个例子中，创建的神经网络有一个隐藏层，该隐藏层包含5个神经元。输入层的大小会自动根据<code>p_train</code>的列数确定，输出层的大小则根据<code>t_train</code>的列数确定。如果<code>t_train</code>是标量（单输出），输出层会有1个神经元；如果是向量（多输出），输出层神经元的数量将与向量的维度相匹配。</li></ul><h3 id="4-设置训练参数"><a href="#4-设置训练参数" class="headerlink" title="(4)设置训练参数"></a>(4)设置训练参数</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">net.trainParam.epochs = <span class="hljs-number">1000</span>;     <span class="hljs-comment">% 迭代次数 </span><br>net.trainParam.goal = <span class="hljs-number">1e-6</span>;       <span class="hljs-comment">% 误差阈值</span><br>net.trainParam.lr = <span class="hljs-number">0.01</span>;         <span class="hljs-comment">% 学习率</span><br></code></pre></td></tr></table></figure><p>在MATLAB的神经网络工具箱中设置神经网络训练参数</p><ul><li><code>net.trainParam.epochs = 1000;</code>：在网络训练过程中，算法调整权重和偏置以减小预测误差，重复1000次或直到达到其他停止条件（如达到设定的误差阈值）。</li><li><code>net.trainParam.goal = 1e-6;</code>：设置了训练的目标误差阈值为10的负6次方。训练会持续进行，直到模型的性能提升带来的误差减少量小于这个阈值，或者达到最大迭代次数。达到这个阈值时，即使未达到最大迭代次数，训练也会停止，因为认为模型已经足够好，进一步训练带来的改善微乎其微。</li><li><code>net.trainParam.lr = 0.01;</code>：设置了学习率为0.01。学习率决定了在每一步训练中，根据梯度下降法更新权重和偏置时的步长。</li></ul><p>较大的学习率可以让网络快速收敛，但可能造成震荡或越过最优解；<br>较小的学习率可以使训练更加稳定，但可能需要更多的迭代次数才能收敛。</p><p>0.01是一个相对常见的初始学习率选择，适用于很多情况，但具体最佳值往往需要根据实际问题和数据调整。</p><h4 id="5-训练网络"><a href="#5-训练网络" class="headerlink" title="(5)训练网络"></a>(5)训练网络</h4><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">net= train(net, p_train, t_train);<br></code></pre></td></tr></table></figure><ul><li><code>net</code> 是之前创建的神经网络模型对象。在MATLAB的神经网络工具箱中，<code>net</code> 包含了网络的架构信息（如层数、每层的神经元数量）、训练参数以及其他配置信息。</li><li><code>train</code> 是神经网络训练的函数。当你调用 <code>train(net, p_train, t_train)</code> 时，MATLAB会根据提供的网络模型<code>net</code>和训练数据集（输入<code>p_train</code>与目标输出<code>t_train</code>）来调整网络中的权重和偏置，目的是最小化网络预测输出与实际目标输出（<code>t_train</code>）之间的误差。</li><li><code>p_train</code> 是训练集的输入数据，代表用于训练网络的特征向量。每一行代表一个样本，每一列代表一个特征。</li><li><code>t_train</code> 是与输入数据对应的训练集目标输出。对于回归问题，这通常是实际测量值；对于分类问题，则是相应的类别标签。它的结构与<code>p_train</code>相对应，即每一行对应输入数据中的一个样本。<br>执行这行代码后，MATLAB会使用先前设置的训练参数（如迭代次数、学习率、误差阈值等）来调整网络参数，直到满足停止条件（比如达到设定的迭代次数或误差目标）。训练完成后，更新后的网络模型（包括优化后的权重和偏置）会保存在<code>net</code>中，可用于后续的预测或其他任务。</li></ul><h3 id="6-仿真测试"><a href="#6-仿真测试" class="headerlink" title="(6)仿真测试"></a>(6)仿真测试</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">t_sim1 = sim(net, p_train);<br>t_sim2 = sim(net, p_test);<br></code></pre></td></tr></table></figure><ul><li><code>sim</code> 函数在MATLAB的神经网络工具箱中用于执行仿真，即利用训练好的神经网络模型对给定的输入数据进行预测。</li><li><code>t_sim1 = sim(net, p_train);</code> 利用训练好的神经网络模型<code>net</code>，对训练集的输入数据<code>p_train</code>进行预测，得到的结果保存在<code>t_sim1</code>中。这一步通常用于理解模型在训练数据上的表现，评估过拟合或欠拟合情况。</li><li><code>t_sim2 = sim(net, p_test);</code> 接下来的这一行则是用同样的模型<code>net</code>去预测测试集的输入数据<code>p_test</code>，预测结果存储在<code>t_sim2</code>中。测试集预测是评估模型泛化能力的关键步骤，即检验模型在未见过的数据上的表现如何。<br>通过比较<code>t_sim1</code>与<code>t_train</code>（训练集的实际输出）以及<code>t_sim2</code>与<code>t_test</code>（测试集的实际输出），可以评估神经网络模型的准确度、误差等性能指标，进而判断模型的有效性和适用性。</li></ul><h3 id="7-数据反归一化"><a href="#7-数据反归一化" class="headerlink" title="(7)数据反归一化"></a>(7)数据反归一化</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">T_sim1 = mapminmax(<span class="hljs-string">&#x27;reverse&#x27;</span>, t_sim1, ps_output);<br>T_sim2 = mapminmax(<span class="hljs-string">&#x27;reverse&#x27;</span>, t_sim2, ps_output);<br></code></pre></td></tr></table></figure><p>对之前通过神经网络仿真预测得到的结果进行反归一化处理，以便将它们转换回原始数据的尺度，从而能够更直观地理解和评估预测效果。</p><ul><li>在神经网络训练和测试阶段，为了提高模型的训练效率和稳定性，通常会对输入数据和目标数据进行归一化处理，使其落入一个特定的小范围，比如[0,1]。这有助于避免因不同特征尺度差异引起的数值问题。</li><li><code>mapminmax(&#39;reverse&#39;, t_sim1, ps_output)</code> 和 <code>mapminmax(&#39;reverse&#39;, t_sim2, ps_output)</code> 分别是对训练集预测结果 <code>t_sim1</code> 和测试集预测结果 <code>t_sim2</code> 进行的反归一化操作。这里的 <code>&#39;reverse&#39;</code> 指定了反向操作，即将归一化后的数据转换回原始尺度。</li><li><code>ps_output</code> 是在数据归一化时保存的参数，包含了进行归一化时所用到的最小值、最大值等信息，是进行反归一化不可或缺的一部分。在训练阶段，当对目标变量 <code>T_train</code> 进行归一化处理时，通过 <code>mapminmax(T_train, 0, 1)</code> 生成了这些参数，并存储在 <code>ps_output</code> 中。</li><li>经过这一步骤后，<code>T_sim1</code> 和 <code>T_sim2</code> 将分别代表训练集和测试集预测结果在原始尺度下的值，可以用来计算模型的实际预测性能指标，比如均方误差（MSE）、决定系数（R²）等，并与实际观测值进行直观比较。</li></ul><h3 id="8-均方根误差（RMSE）"><a href="#8-均方根误差（RMSE）" class="headerlink" title="(8)均方根误差（RMSE）"></a>(8)均方根误差（RMSE）</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab">RMSE1 = <span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">mean</span>((T_sim1 - T_train).^<span class="hljs-number">2</span>));<br>RMSE2 = <span class="hljs-built_in">sqrt</span>(<span class="hljs-built_in">mean</span>((T_sim2 - T_test).^<span class="hljs-number">2</span>));<br></code></pre></td></tr></table></figure><p>这段代码背后的数学公式是均方根误差（Root Mean Square Error, RMSE）。对于一个预测模型，如果我们的预测值是 (\hat{y}_i)，而实际观测值是 (y_i)，对于 (n) 个观测样本，RMSE 可以通过以下步骤计算得到：</p><ol><li><strong>计算残差平方</strong>：首先，对每一个样本，计算预测值与实际值之差的平方，即残差平方 ((\hat{y}_i - y_i)^2)</li><li><strong>求和</strong>：将所有样本的残差平方相加，得到总残差平方和 (\sum_{i&#x3D;1}^{n}(\hat{y}_i - y_i)^2)</li><li><strong>平均</strong>：将总残差平方和除以样本数量 (n)，得到平均残差平方 (\frac{1}{n}\sum_{i&#x3D;1}^{n}(\hat{y}_i - y_i)^2)</li><li><strong>开方</strong>：对平均残差平方开平方根，得到均方根误差 (\sqrt{\frac{1}{n}\sum_{i&#x3D;1}^{n}(\hat{y}_i - y_i)^2})</li></ol><ul><li>对于 <code>error1</code>，(T_sim1) 相当于预测值 (\hat{y}<em>i)，而 (T_train) 是对应的真实值 (y_i)，并且 (M) 代表训练集中的样本数量 (n)。<br>所以，训练集上的RMSE公式为：[ \text{error1} &#x3D; \sqrt{\frac{1}{M}\sum</em>{i&#x3D;1}^{M}(T_{sim1,i} - T_{train,i})^2} ]</li><li>对于 <code>error2</code>，同样的逻辑适用，但这里的预测值是 (T_sim2)，真实值是 (T_test)，且 (N) 是测试集中的样本数量。<br>测试集上的RMSE公式为：[ \text{error2} &#x3D; \sqrt{\frac{1}{N}\sum_{i&#x3D;1}^{N}(T_{sim2,i} - T_{test,i})^2} ]</li></ul><h3 id="9-绘制预测结果"><a href="#9-绘制预测结果" class="headerlink" title="(9)绘制预测结果"></a>(9)绘制预测结果</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">plot</span>(<span class="hljs-number">1</span>: M, T_train, <span class="hljs-string">&#x27;r-*&#x27;</span>, <span class="hljs-number">1</span>: M, T_sim1, <span class="hljs-string">&#x27;b-o&#x27;</span>, <span class="hljs-string">&#x27;LineWidth&#x27;</span>, <span class="hljs-number">1</span>)<br><span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;真实值&#x27;</span>, <span class="hljs-string">&#x27;预测值&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;预测样本&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;预测结果&#x27;</span>)<br>string = &#123;<span class="hljs-string">&#x27;训练集预测结果对比&#x27;</span>; [<span class="hljs-string">&#x27;RMSE=&#x27;</span> num2str(error1)]&#125;;<br>title(string)<br>xlim([<span class="hljs-number">1</span>, M])<br>grid<br><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">plot</span>(<span class="hljs-number">1</span>: N, T_test, <span class="hljs-string">&#x27;r-*&#x27;</span>, <span class="hljs-number">1</span>: N, T_sim2, <span class="hljs-string">&#x27;b-o&#x27;</span>, <span class="hljs-string">&#x27;LineWidth&#x27;</span>, <span class="hljs-number">1</span>)<br><span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;真实值&#x27;</span>, <span class="hljs-string">&#x27;预测值&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;预测样本&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;预测结果&#x27;</span>)<br>string = &#123;<span class="hljs-string">&#x27;测试集预测结果对比&#x27;</span>; [<span class="hljs-string">&#x27;RMSE=&#x27;</span> num2str(error2)]&#125;;<br>title(string)<br>xlim([<span class="hljs-number">1</span>, N])<br>grid<br></code></pre></td></tr></table></figure><p>这段代码绘制两个图形，分别展示训练集和测试集上真实值与预测值的对比，并在图标题中显示对应的均方根误差（RMSE）值。</p><ol><li><strong>创建图形</strong>: <code>figure</code> 命令用来创建一个新的图形窗口。</li><li><strong>绘制数据点</strong>: 使用 <code>plot</code> 函数绘制两组数据：<ul><li>红色星号 (<code>&#39;r-*&#39;</code>) 代表训练集的真实值 <code>T_train</code>。</li><li>蓝色圆圈 (<code>&#39;b-o&#39;</code>) 表示训练集上的预测值 <code>T_sim1</code>。</li></ul></li><li><strong>设置线宽</strong>: <code>&#39;LineWidth&#39;, 1</code> 设置线条宽度为1，使图形更清晰。</li><li><strong>添加图例</strong>: <code>legend(&#39;真实值&#39;, &#39;预测值&#39;)</code> 为图形添加图例，区分真实值和预测值。</li><li><strong>设置坐标轴标签</strong>: <code>xlabel(&#39;预测样本&#39;)</code>, <code>ylabel(&#39;预测结果&#39;)</code> 分别为x轴和y轴命名。</li><li><strong>构造标题字符串</strong>: <code>num2str(error1)</code> 将数值转换为字符串形式。</li><li><strong>设置标题</strong>: <code>title(string)</code> 将构造的字符串设置为图形的标题。</li><li><strong>限定x轴范围</strong>: <code>xlim([1, M])</code> 设置x轴的显示范围从1到训练样本数M。</li><li><strong>添加网格线</strong>: <code>grid</code> 在图形中添加网格线，以便更直观地读取数据点位置。<br>该代码段计算并显示了模型在训练集和测试集上的几种重要评价指标：决定系数（R²）、平均绝对误差（MAE）和平均偏差（MBE）。</li></ol><h3 id="10-相关指标计算"><a href="#10-相关指标计算" class="headerlink" title="(10)相关指标计算"></a>(10)相关指标计算</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% R2</span><br>R1 = <span class="hljs-number">1</span> - norm(T_train - T_sim1)^<span class="hljs-number">2</span> / norm(T_train - <span class="hljs-built_in">mean</span>(T_train))^<span class="hljs-number">2</span>;<br>R2 = <span class="hljs-number">1</span> - norm(T_test  - T_sim2)^<span class="hljs-number">2</span> / norm(T_test  - <span class="hljs-built_in">mean</span>(T_test ))^<span class="hljs-number">2</span>;<br><br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的R2为：&#x27;</span>, num2str(R1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的R2为：&#x27;</span>, num2str(R2)])<br><br><span class="hljs-comment">% MAE</span><br>mae1 = sum(<span class="hljs-built_in">abs</span>(T_sim1 - T_train)) ./ M ;<br>mae2 = sum(<span class="hljs-built_in">abs</span>(T_sim2 - T_test )) ./ N ;<br><br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的MAE为：&#x27;</span>, num2str(mae1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的MAE为：&#x27;</span>, num2str(mae2)])<br><br><span class="hljs-comment">% MBE</span><br>mbe1 = sum(T_sim1 - T_train) ./ M ;<br>mbe2 = sum(T_sim2 - T_test ) ./ N ;<br><br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的MBE为：&#x27;</span>, num2str(mbe1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的MBE为：&#x27;</span>, num2str(mbe2)])<br></code></pre></td></tr></table></figure><h3 id="决定系数（R²）（确定系数）"><a href="#决定系数（R²）（确定系数）" class="headerlink" title="决定系数（R²）（确定系数）"></a>决定系数（R²）（确定系数）</h3><ul><li><p><strong>定义</strong>：R²衡量模型拟合度的好坏，值范围从0到1，越接近1表示模型对数据的拟合度越好。R²高意味着模型能较好地捕捉数据的变异性。计算公式为1减去残差平方和与总平方和之比。</p><ul><li>对于训练集：(R_1 &#x3D; 1 - \frac{||T_{train} - T_{sim1}||^2}{||T_{train} - \bar{T}_{train}||^2})</li><li>对于测试集：(R_2 &#x3D; 1 - \frac{||T_{test} - T_{sim2}||^2}{||T_{test} - \bar{T}_{test}||^2})</li></ul><p>其中，(\bar{T}) 表示相应数据集的平均值，(||.||) 表示向量的二范数（即向量元素平方和的平方根）。</p></li></ul><h3 id="平均绝对误差（MAE）"><a href="#平均绝对误差（MAE）" class="headerlink" title="平均绝对误差（MAE）"></a>平均绝对误差（MAE）</h3><ul><li><strong>定义</strong>：MAE是预测误差的绝对值的平均，能够直观地反映预测值与真实值之间的平均偏离程度。<ul><li>对于训练集：(\text{MAE}<em>1 &#x3D; \frac{1}{M} \sum|T</em>{sim1} - T_{train}|)</li><li>对于测试集：(\text{MAE}<em>2 &#x3D; \frac{1}{N} \sum|T</em>{sim2} - T_{test}|)</li></ul></li></ul><h3 id="平均偏差（MBE）"><a href="#平均偏差（MBE）" class="headerlink" title="平均偏差（MBE）"></a>平均偏差（MBE）</h3><ul><li><strong>定义</strong>：MBE是预测值与真实值之差的平均值，表示预测值系统性偏高或偏低的程度。<ul><li>对于训练集：(\text{MBE}<em>1 &#x3D; \frac{1}{M} \sum(T</em>{sim1} - T_{train}))</li><li>对于测试集：(\text{MBE}<em>2 &#x3D; \frac{1}{N} \sum(T</em>{sim2} - T_{test}))</li></ul></li></ul><p>MAE和MBE低则表明预测误差小，模型预测较为准确。</p><h3 id="11-绘制散点图"><a href="#11-绘制散点图" class="headerlink" title="(11)绘制散点图"></a>(11)绘制散点图</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs matlab">sz = <span class="hljs-number">25</span>;<br>c = <span class="hljs-string">&#x27;b&#x27;</span>;<br><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">scatter</span>(T_train, T_sim1, sz, c)<br><span class="hljs-built_in">hold</span> on<br><span class="hljs-built_in">plot</span>(xlim, ylim, <span class="hljs-string">&#x27;--k&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;训练集真实值&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;训练集预测值&#x27;</span>);<br>xlim([<span class="hljs-built_in">min</span>(T_train) <span class="hljs-built_in">max</span>(T_train)])<br>ylim([<span class="hljs-built_in">min</span>(T_sim1) <span class="hljs-built_in">max</span>(T_sim1)])<br>title(<span class="hljs-string">&#x27;训练集预测值 vs. 训练集真实值&#x27;</span>)<br><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">scatter</span>(T_test, T_sim2, sz, c)<br><span class="hljs-built_in">hold</span> on<br><span class="hljs-built_in">plot</span>(xlim, ylim, <span class="hljs-string">&#x27;--k&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;测试集真实值&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;测试集预测值&#x27;</span>);<br>xlim([<span class="hljs-built_in">min</span>(T_test) <span class="hljs-built_in">max</span>(T_test)])<br>ylim([<span class="hljs-built_in">min</span>(T_sim2) <span class="hljs-built_in">max</span>(T_sim2)])<br>title(<span class="hljs-string">&#x27;测试集预测值 vs. 测试集真实值&#x27;</span>)<br></code></pre></td></tr></table></figure><ol><li><code>sz = 25;</code> 设置散点的大小为25。</li><li><code>c = &#39;b&#39;;</code> 指定散点的颜色为蓝色。</li><li><code>scatter(T_train, T_sim1, sz, c)</code> 绘制训练集的真实值(<code>T_train</code>)与预测值(<code>T_sim1</code>)之间的散点图，点的大小为25，颜色为蓝色。</li><li><code>hold on</code> 保持当前图形，以便在同一图上绘制更多内容。</li><li><code>plot(xlim, ylim, &#39;--k&#39;)</code> 添加一条黑点划线，代表y&#x3D;x的理想情况，用于直观比较预测与真实值的一致性。</li><li><code>xlabel(&#39;训练集真实值&#39;); ylabel(&#39;训练集预测值&#39;);</code> 分别设置x轴和y轴的标签。</li><li><code>xlim([min(T_train) max(T_train)]), ylim([min(T_sim1) max(T_sim1)])</code> 设置x轴和y轴的显示范围，确保所有数据点可见。</li><li><code>title(&#39;训练集预测值 vs. 训练集真实值&#39;)</code> 给图表添加标题。<br>理想情况下，所有的点应该紧密地围绕着斜率为1的直线（y&#x3D;x），这表明预测值与真实值之间不存在系统性偏差值非常接近。通过观察散点的分布，可以评估模型预测的准确性及是否存在系统性偏差。</li></ol><h3 id="12-保存所需变量"><a href="#12-保存所需变量" class="headerlink" title="(12)保存所需变量"></a>(12)保存所需变量</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs matlab">save net.mat net<br>save ps_input.mat ps_input<br>save ps_output.mat ps_output<br></code></pre></td></tr></table></figure><p>这段MATLAB代码的作用是将工作区中的几个关键变量保存到外部文件中，以便后续使用或分享。</p><ul><li><code>save net.mat net</code>：这一行命令将变量<code>net</code>保存到名为<code>net.mat</code>的MAT文件中。在这里，<code>net</code>通常是指一个经过训练的神经网络模型或者其他重要的计算结果。MAT文件是MATLAB的二进制文件格式，能够高效地存储和恢复MATLAB工作区中的变量。</li><li><code>save ps_input.mat ps_input</code>：这行代码将变量<code>ps_input</code>保存到名为<code>ps_input.mat</code>的MAT文件中。<code>ps_input</code>可能包含了用于模型预测或进一步分析的输入数据预处理参数，比如归一化或标准化的参数，这对于确保数据一致性及模型在未来应用中的准确性至关重要。</li><li><code>save ps_output.mat ps_output</code>：同样地，这行命令将变量<code>ps_output</code>保存到了<code>ps_output.mat</code>文件中。<code>ps_output</code>可能涉及模型预测的输出结果或者后处理参数，这些对于理解和验证模型性能，或在其他场景下复现预测结果都是必要的。<br>通过这三个命令，用户可以将重要的模型、输入预处理参数和输出结果持久化存储，方便未来加载这些变量继续进行分析、验证模型或进行新的预测任务，而无需重新训练模型或处理原始数据。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
