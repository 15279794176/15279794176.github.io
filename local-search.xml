<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>文章</title>
    <link href="/2024/03/25/%E6%96%87%E7%AB%A0/"/>
    <url>/2024/03/25/%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/03/25/%E5%9F%BA%E4%BA%8EBP%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%BD%92%E9%A2%84%E6%B5%8B/"/>
    <url>/2024/03/25/%E5%9F%BA%E4%BA%8EBP%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%9A%84%E6%95%B0%E6%8D%AE%E5%9B%9E%E5%BD%92%E9%A2%84%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="基于BP神经网络的数据回归预测"><a href="#基于BP神经网络的数据回归预测" class="headerlink" title="基于BP神经网络的数据回归预测"></a>基于BP神经网络的数据回归预测</h1><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">%%  清空环境变量</span><br>warning off             <span class="hljs-comment">% 关闭报警信息</span><br>close all               <span class="hljs-comment">% 关闭开启的图窗</span><br>clear                   <span class="hljs-comment">% 清空变量</span><br>clc                     <span class="hljs-comment">% 清空命令行</span><br><br><span class="hljs-comment">%%  导入数据</span><br>res = xlsread(<span class="hljs-string">&#x27;数据集.xlsx&#x27;</span>);<br><br><span class="hljs-comment">%%通过随机排列 (randperm) 对数据进行打乱，然后分割成训练集（前70行）和测试集（剩余行）。</span><br>temp = randperm(<span class="hljs-number">92</span>);<br>P_train = res(temp(<span class="hljs-number">1</span>: <span class="hljs-number">70</span>), <span class="hljs-number">1</span>: <span class="hljs-number">7</span>)&#x27;;<br>T_train = res(temp(<span class="hljs-number">1</span>: <span class="hljs-number">70</span>), <span class="hljs-number">8</span>)&#x27;;<br>M = <span class="hljs-built_in">size</span>(P_train, <span class="hljs-number">2</span>);<br><br>P_test = res(temp(<span class="hljs-number">71</span>: <span class="hljs-keyword">end</span>), <span class="hljs-number">1</span>: <span class="hljs-number">7</span>)&#x27;;<br>T_test = res(temp(<span class="hljs-number">71</span>: <span class="hljs-keyword">end</span>), <span class="hljs-number">8</span>)&#x27;;<br>N = <span class="hljs-built_in">size</span>(P_test, <span class="hljs-number">2</span>);<br><br><span class="hljs-comment">%%  数据归一化</span><br>[p_train, ps_input] = mapminmax(P_train, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>p_test = mapminmax(<span class="hljs-string">&#x27;apply&#x27;</span>, P_test, ps_input);<br><br>[t_train, ps_output] = mapminmax(T_train, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>);<br>t_test = mapminmax(<span class="hljs-string">&#x27;apply&#x27;</span>, T_test, ps_output);<br><br><span class="hljs-comment">%%  newff是MATLAB中用于创建多层前馈神经网络的函数。</span><br><span class="hljs-comment">%%  p_train代表训练集的输入数据，即特征向量。在神经网络训练过程中，这些输入数据会被用来学习权重和偏置，以便网络能对输入产生期望的输出。</span><br><span class="hljs-comment">%%  t_train代表训练集的目标输出数据，对于回归问题，这通常是连续值；对于分类问题，则通常是类别标签的编码形式。</span><br><span class="hljs-comment">%%  5指定了隐藏层的神经元数量。在这个例子中，创建的神经网络有一个隐藏层，该隐藏层包含5个神经元。输入层的大小会自动根据p_train的列数确定，输出层的大小则根据t_train的列数确定。如果t_train是标量（单输出），输出层会有1个神经元；如果是向量（多输出），输出层神经元的数量将与向量的维度相匹配。</span><br>net = newff(p_train, t_train, <span class="hljs-number">5</span>);<br><br><span class="hljs-comment">%%  设置训练参数</span><br>net.trainParam.epochs = <span class="hljs-number">1000</span>;     <span class="hljs-comment">% 迭代次数 </span><br>net.trainParam.goal = <span class="hljs-number">1e-6</span>;       <span class="hljs-comment">% 误差阈值</span><br>net.trainParam.lr = <span class="hljs-number">0.01</span>;         <span class="hljs-comment">% 学习率为0.01，学习率决定了在每一步训练中，根据梯度下降法更新权重和偏置时的步长。较大的学习率可以让网络快速收敛，但可能造成震荡或越过最优解；较小的学习率可以使训练更加稳定，但可能需要更多的迭代次数才能收敛。0.01是一个相对常见的初始学习率选择，适用于很多情况，但具体最佳值往往需要根据实际问题和数据调整。</span><br><br><span class="hljs-comment">%%  训练网络</span><br>net= train(net, p_train, t_train);<br><br><span class="hljs-comment">%%  仿真测试</span><br>t_sim1 = sim(net, p_train);<br>t_sim2 = sim(net, p_test);<br><br><span class="hljs-comment">%%  数据反归一化</span><br>T_sim1 = mapminmax(<span class="hljs-string">&#x27;reverse&#x27;</span>, t_sim1, ps_output);<br>T_sim2 = mapminmax(<span class="hljs-string">&#x27;reverse&#x27;</span>, t_sim2, ps_output);<br><br><span class="hljs-comment">%%  均方根误差</span><br>error1 = <span class="hljs-built_in">sqrt</span>(sum((T_sim1 - T_train).^<span class="hljs-number">2</span>) ./ M);<br>error2 = <span class="hljs-built_in">sqrt</span>(sum((T_sim2 - T_test ).^<span class="hljs-number">2</span>) ./ N);<br><br><span class="hljs-comment">%%  绘图</span><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">plot</span>(<span class="hljs-number">1</span>: M, T_train, <span class="hljs-string">&#x27;r-*&#x27;</span>, <span class="hljs-number">1</span>: M, T_sim1, <span class="hljs-string">&#x27;b-o&#x27;</span>, <span class="hljs-string">&#x27;LineWidth&#x27;</span>, <span class="hljs-number">1</span>)<br><span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;真实值&#x27;</span>, <span class="hljs-string">&#x27;预测值&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;预测样本&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;预测结果&#x27;</span>)<br>string = &#123;<span class="hljs-string">&#x27;训练集预测结果对比&#x27;</span>; [<span class="hljs-string">&#x27;RMSE=&#x27;</span> num2str(error1)]&#125;;<br>title(string)<br>xlim([<span class="hljs-number">1</span>, M])<br>grid<br><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">plot</span>(<span class="hljs-number">1</span>: N, T_test, <span class="hljs-string">&#x27;r-*&#x27;</span>, <span class="hljs-number">1</span>: N, T_sim2, <span class="hljs-string">&#x27;b-o&#x27;</span>, <span class="hljs-string">&#x27;LineWidth&#x27;</span>, <span class="hljs-number">1</span>)<br><span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;真实值&#x27;</span>, <span class="hljs-string">&#x27;预测值&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;预测样本&#x27;</span>)<br>ylabel(<span class="hljs-string">&#x27;预测结果&#x27;</span>)<br>string = &#123;<span class="hljs-string">&#x27;测试集预测结果对比&#x27;</span>; [<span class="hljs-string">&#x27;RMSE=&#x27;</span> num2str(error2)]&#125;;<br>title(string)<br>xlim([<span class="hljs-number">1</span>, N])<br>grid<br><br><span class="hljs-comment">%%  相关指标计算</span><br><span class="hljs-comment">% R2</span><br>R1 = <span class="hljs-number">1</span> - norm(T_train - T_sim1)^<span class="hljs-number">2</span> / norm(T_train - <span class="hljs-built_in">mean</span>(T_train))^<span class="hljs-number">2</span>;<br>R2 = <span class="hljs-number">1</span> - norm(T_test  - T_sim2)^<span class="hljs-number">2</span> / norm(T_test  - <span class="hljs-built_in">mean</span>(T_test ))^<span class="hljs-number">2</span>;<br><br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的R2为：&#x27;</span>, num2str(R1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的R2为：&#x27;</span>, num2str(R2)])<br><br><span class="hljs-comment">% MAE</span><br>mae1 = sum(<span class="hljs-built_in">abs</span>(T_sim1 - T_train)) ./ M ;<br>mae2 = sum(<span class="hljs-built_in">abs</span>(T_sim2 - T_test )) ./ N ;<br><br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的MAE为：&#x27;</span>, num2str(mae1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的MAE为：&#x27;</span>, num2str(mae2)])<br><br><span class="hljs-comment">% MBE</span><br>mbe1 = sum(T_sim1 - T_train) ./ M ;<br>mbe2 = sum(T_sim2 - T_test ) ./ N ;<br><br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;训练集数据的MBE为：&#x27;</span>, num2str(mbe1)])<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;测试集数据的MBE为：&#x27;</span>, num2str(mbe2)])<br><br><span class="hljs-comment">%%  绘制散点图</span><br>sz = <span class="hljs-number">25</span>;<br>c = <span class="hljs-string">&#x27;b&#x27;</span>;<br><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">scatter</span>(T_train, T_sim1, sz, c)<br><span class="hljs-built_in">hold</span> on<br><span class="hljs-built_in">plot</span>(xlim, ylim, <span class="hljs-string">&#x27;--k&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;训练集真实值&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;训练集预测值&#x27;</span>);<br>xlim([<span class="hljs-built_in">min</span>(T_train) <span class="hljs-built_in">max</span>(T_train)])<br>ylim([<span class="hljs-built_in">min</span>(T_sim1) <span class="hljs-built_in">max</span>(T_sim1)])<br>title(<span class="hljs-string">&#x27;训练集预测值 vs. 训练集真实值&#x27;</span>)<br><br><span class="hljs-built_in">figure</span><br><span class="hljs-built_in">scatter</span>(T_test, T_sim2, sz, c)<br><span class="hljs-built_in">hold</span> on<br><span class="hljs-built_in">plot</span>(xlim, ylim, <span class="hljs-string">&#x27;--k&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;测试集真实值&#x27;</span>);<br>ylabel(<span class="hljs-string">&#x27;测试集预测值&#x27;</span>);<br>xlim([<span class="hljs-built_in">min</span>(T_test) <span class="hljs-built_in">max</span>(T_test)])<br>ylim([<span class="hljs-built_in">min</span>(T_sim2) <span class="hljs-built_in">max</span>(T_sim2)])<br>title(<span class="hljs-string">&#x27;测试集预测值 vs. 测试集真实值&#x27;</span>)<br><br><span class="hljs-comment">%%  保存所需变量</span><br>save net.mat net<br>save ps_input.mat ps_input<br>save ps_output.mat ps_output<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
